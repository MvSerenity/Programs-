#include <stdio.h>
#include <stdlib.h>
typedef struct node {
int data;
struct node *left;
struct node *right;
} node;
// node* createSingleNode(int data) {
// node* newNode = (node*)malloc(sizeof(node));
// newNode -> data = data;
// newNode -> left = NULL;
// newNode -> right = NULL;
// return newNode;
// }
node* createNode() {
 int x;
 node* newNode = (node*)malloc(sizeof(node));
 printf("Enter data (-1 for no node) : ");
 scanf("%d", &x);
 if(x == -1) {
 return 0;
 }
 newNode -> data = x;
 printf("Enter left child of %d ", x);
 newNode -> left = createNode();
 printf("Enter right child of %d ", x);
 newNode -> right = createNode();
 return newNode;
}
void preOrder(node* root) {
 if(root == 0) {
 return;
 }
 printf("%d ", root -> data);
 preOrder(root -> left);
 preOrder(root -> right);
}
void postOrder(node* root) {
 if(root == 0) {
 return;
 }
 postOrder(root -> left);
 postOrder(root -> right);
 printf("%d ", root -> data);
}
void inOrder(node* root) {
 if(root == 0) {
 return;
 }
 inOrder(root -> left);
 printf("%d ", root -> data);
 inOrder(root -> right);
}
int main() {
 printf("Create root node : ");
 node* root = createNode();
 while(1) {
 printf("Enter your choice \n");
 printf("0. Quit\n1. Create\n2. In-Order Traversal\n3. Pre-Order Traversal\n4. Post-Order 
Traversal\nYour Choice : ");
 int choice;
 scanf("%d", &choice);
 if(root == 0 || choice == 0) {
 break;
 }
 if(choice == 1) {
 node* root = createNode();
 createNode();
 }
 if(choice == 2) {
 printf("In-order : ");
 inOrder(root);
 }
 if(choice == 3) {
 printf("Pre-order : ");
 preOrder(root);
 }
 if(choice == 4) {
 printf("Post-order : ");
 postOrder(root);
 }
 } 
}
